{
	"info": {
		"_postman_id": "592caf15-8378-414d-8039-1c9fce6dceec",
		"name": "SS QA Test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "31210525"
	},
	"item": [
		{
			"name": "Login",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\": \"Katharina_Bernier\",\r\n  \"password\": \"s3cret\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3001/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get public transactions",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonData = pm.response.json();\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify Page Data data types\", function () {\r",
							"    pm.expect(typeof jsonData.pageData.page == \"integer\");\r",
							"    pm.expect(typeof jsonData.pageData.limit == \"integer\");\r",
							"});\r",
							"\r",
							"//there is no dateRangeStart or dateRangeEnd\r",
							"pm.test(\"Date range data types\", function () {\r",
							"    jsonData.results.forEach((object) =>{\r",
							"        pm.expect(typeof object.createdAt == \"date\");\r",
							"        pm.expect(typeof object.modifiedAt == \"date\");\r",
							"    }\r",
							"    )\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3001/transactions/public",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"transactions",
						"public"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonData = pm.response.json();\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Schema check\", function () {\r",
							"    jsonData.results.forEach((object) =>{\r",
							"        pm.expect(object).to.have.keys(\r",
							"            \"id\",\r",
							"            \"uuid\",\r",
							"            \"firstName\",\r",
							"            \"lastName\",\r",
							"            \"username\",\r",
							"            \"password\",\r",
							"            \"email\",\r",
							"            \"phoneNumber\",\r",
							"            \"avatar\",\r",
							"            \"defaultPrivacyLevel\",\r",
							"            \"balance\",\r",
							"            \"createdAt\",\r",
							"            \"modifiedAt\",\r",
							"        );\r",
							"    }\r",
							"    )\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3001/users",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Bank Account",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"bankAcName\", pm.variables.replaceIn(\"{{$randomBankAccountName}}\"));\r",
							"pm.collectionVariables.set(\"bankAcNum\", pm.variables.replaceIn(\"{{$randomBankAccount}}\"));\r",
							"pm.collectionVariables.set(\"bankRoNum\", pm.variables.replaceIn(\"{{$randomBankAccountIban}}\"));"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body returns correct values\", function () {\r",
							"    pm.expect(jsonData.account.bankName).to.eql(pm.collectionVariables.get(\"bankAcName\"));\r",
							"    pm.expect(jsonData.account.accountNumber).to.eql(pm.collectionVariables.get(\"bankAcNum\"));\r",
							"    pm.expect(jsonData.account.routingNumber).to.eql(pm.collectionVariables.get(\"bankRoNum\"));\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"bankName\": \"{{bankAcName}}\",\r\n    \"accountNumber\": \"{{bankAcNum}}\",\r\n    \"routingNumber\": \"{{bankRoNum}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3001/bankAccounts",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"bankAccounts"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "bankAcName",
			"value": ""
		},
		{
			"key": "bankAcNum",
			"value": ""
		},
		{
			"key": "bankRoNum",
			"value": ""
		}
	]
}